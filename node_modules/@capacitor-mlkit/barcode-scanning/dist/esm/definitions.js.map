{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAqfA;;GAEG;AACH,MAAM,CAAN,IAAY,aA+EX;AA/ED,WAAY,aAAa;IACvB;;;;OAIG;IACH,gCAAe,CAAA;IACf;;;;OAIG;IACH,oCAAmB,CAAA;IACnB;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,qCAAoB,CAAA;IACpB;;;;OAIG;IACH,2CAA0B,CAAA;IAC1B;;;;OAIG;IACH,+BAAc,CAAA;IACd;;;;OAIG;IACH,iCAAgB,CAAA;IAChB;;;;OAIG;IACH,4BAAW,CAAA;IACX;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,mCAAkB,CAAA;IAClB;;;;OAIG;IACH,+BAAc,CAAA;IACd;;;;OAIG;IACH,+BAAc,CAAA;AAChB,CAAC,EA/EW,aAAa,KAAb,aAAa,QA+ExB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,gBAqDX;AArDD,WAAY,gBAAgB;IAC1B;;OAEG;IACH,oDAAgC,CAAA;IAChC;;OAEG;IACH,gDAA4B,CAAA;IAC5B;;OAEG;IACH,sDAAkC,CAAA;IAClC;;OAEG;IACH,mCAAe,CAAA;IACf;;OAEG;IACH,+BAAW,CAAA;IACX;;OAEG;IACH,iCAAa,CAAA;IACb;;OAEG;IACH,mCAAe,CAAA;IACf;;OAEG;IACH,uCAAmB,CAAA;IACnB;;OAEG;IACH,+BAAW,CAAA;IACX;;OAEG;IACH,iCAAa,CAAA;IACb;;OAEG;IACH,+BAAW,CAAA;IACX;;OAEG;IACH,iCAAa,CAAA;IACb;;OAEG;IACH,uCAAmB,CAAA;AACrB,CAAC,EArDW,gBAAgB,KAAhB,gBAAgB,QAqD3B;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,UASX;AATD,WAAY,UAAU;IACpB;;OAEG;IACH,6BAAe,CAAA;IACf;;OAEG;IACH,2BAAa,CAAA;AACf,CAAC,EATW,UAAU,KAAV,UAAU,QASrB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,sCAiCX;AAjCD,WAAY,sCAAsC;IAChD;;OAEG;IACH,yGAAW,CAAA;IACX;;OAEG;IACH,yGAAW,CAAA;IACX;;OAEG;IACH,iHAAe,CAAA;IACf;;OAEG;IACH,2GAAY,CAAA;IACZ;;OAEG;IACH,6GAAa,CAAA;IACb;;OAEG;IACH,uGAAU,CAAA;IACV;;OAEG;IACH,+GAAc,CAAA;IACd;;OAEG;IACH,yHAAmB,CAAA;AACrB,CAAC,EAjCW,sCAAsC,KAAtC,sCAAsC,QAiCjD","sourcesContent":["import type { PermissionState, PluginListenerHandle } from '@capacitor/core';\n\nexport interface BarcodeScannerPlugin {\n  /**\n   * Start scanning for barcodes.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  startScan(options?: StartScanOptions): Promise<void>;\n  /**\n   * Stop scanning for barcodes.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  stopScan(): Promise<void>;\n  /**\n   * Read barcodes from an image.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  readBarcodesFromImage(\n    options: ReadBarcodesFromImageOptions,\n  ): Promise<ReadBarcodesFromImageResult>;\n  /**\n   * Scan a barcode with a ready-to-use interface without WebView customization.\n   *\n   * On **Android**, this method is only available on devices with Google Play Services\n   * installed. Therefore, no camera permission is required.\n   *\n   * **Attention:** Before using this method on *Android*, first check if the Google Barcode Scanner module is available\n   * by using `isGoogleBarcodeScannerModuleAvailable()`.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   * @experimental This method is experimental and may change in the future.\n   */\n  scan(options?: ScanOptions): Promise<ScanResult>;\n  /**\n   * Returns whether or not the barcode scanner is supported.\n   *\n   * Available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  isSupported(): Promise<IsSupportedResult>;\n  /**\n   * Enable camera's torch (flash) during a scan session.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  enableTorch(): Promise<void>;\n  /**\n   * Disable camera's torch (flash) during a scan session.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  disableTorch(): Promise<void>;\n  /**\n   * Toggle camera's torch (flash) during a scan session.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  toggleTorch(): Promise<void>;\n  /**\n   * Returns whether or not the camera's torch (flash) is enabled.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  isTorchEnabled(): Promise<IsTorchEnabledResult>;\n  /**\n   * Returns whether or not the camera's torch (flash) is available.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  isTorchAvailable(): Promise<IsTorchAvailableResult>;\n  /**\n   * Set the zoom ratio of the camera.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 5.4.0\n   */\n  setZoomRatio(options: SetZoomRatioOptions): Promise<void>;\n  /**\n   * Get the zoom ratio of the camera.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 5.4.0\n   */\n  getZoomRatio(): Promise<GetZoomRatioResult>;\n  /**\n   * Get the minimum zoom ratio of the camera.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 5.4.0\n   */\n  getMinZoomRatio(): Promise<GetMinZoomRatioResult>;\n  /**\n   * Get the maximum zoom ratio of the camera.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 5.4.0\n   */\n  getMaxZoomRatio(): Promise<GetMaxZoomRatioResult>;\n  /**\n   * Open the settings of the app so that the user can grant the camera permission.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  openSettings(): Promise<void>;\n  /**\n   * Check if the Google Barcode Scanner module is available.\n   *\n   * If the Google Barcode Scanner module is not available, you can install it by using `installGoogleBarcodeScannerModule()`.\n   *\n   * Only available on Android.\n   *\n   * @since 5.1.0\n   */\n  isGoogleBarcodeScannerModuleAvailable(): Promise<IsGoogleBarcodeScannerModuleAvailableResult>;\n  /**\n   * Install the Google Barcode Scanner module.\n   *\n   * **Attention**: This only starts the installation.\n   * The `googleBarcodeScannerModuleInstallProgress` event listener will\n   * notify you when the installation is complete.\n   *\n   * Only available on Android.\n   *\n   * @since 5.1.0\n   */\n  installGoogleBarcodeScannerModule(): Promise<void>;\n  /**\n   * Check camera permission.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  checkPermissions(): Promise<PermissionStatus>;\n  /**\n   * Request camera permission.\n   *\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  requestPermissions(): Promise<PermissionStatus>;\n  /**\n   * Called when a barcode is scanned.\n   *\n   * Available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  addListener(\n    eventName: 'barcodeScanned',\n    listenerFunc: (event: BarcodeScannedEvent) => void,\n  ): Promise<PluginListenerHandle>;\n  /**\n   * Called when an error occurs during the scan.\n   *\n   * Available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  addListener(\n    eventName: 'scanError',\n    listenerFunc: (event: ScanErrorEvent) => void,\n  ): Promise<PluginListenerHandle>;\n  /**\n   * Called when the Google Barcode Scanner module is installed.\n   *\n   * Available on Android.\n   *\n   * @since 5.1.0\n   */\n  addListener(\n    eventName: 'googleBarcodeScannerModuleInstallProgress',\n    listenerFunc: (\n      event: GoogleBarcodeScannerModuleInstallProgressEvent,\n    ) => void,\n  ): Promise<PluginListenerHandle>;\n  /**\n   * Remove all listeners for this plugin.\n   *\n   * @since 0.0.1\n   */\n  removeAllListeners(): Promise<void>;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface StartScanOptions {\n  /**\n   * Improve the speed of the barcode scanner by configuring\n   * the barcode formats to scan for.\n   *\n   * @since 0.0.1\n   */\n  formats?: BarcodeFormat[];\n  /**\n   * Configure the camera (front or back) to use.\n   *\n   * @since 0.0.1\n   */\n  lensFacing?: LensFacing;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface ReadBarcodesFromImageOptions {\n  /**\n   * Improve the speed of the barcode scanner by configuring\n   * the barcode formats to scan for.\n   *\n   * @since 0.0.1\n   */\n  formats?: BarcodeFormat[];\n  /**\n   * The local path to the image file.\n   *\n   * @since 0.0.1\n   */\n  path: string;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface ReadBarcodesFromImageResult {\n  /**\n   * The detected barcodes.\n   *\n   * @since 0.0.1\n   */\n  barcodes: Barcode[];\n}\n\n/**\n * @since 0.0.1\n */\nexport interface ScanOptions {\n  /**\n   * Improve the speed of the barcode scanner by configuring\n   * the barcode formats to scan for.\n   *\n   * @since 0.0.1\n   */\n  formats?: BarcodeFormat[];\n}\n\n/**\n * @since 0.0.1\n */\nexport interface ScanResult {\n  /**\n   * The detected barcodes.\n   *\n   * @since 0.0.1\n   */\n  barcodes: Barcode[];\n}\n\n/**\n * @since 0.0.1\n */\nexport interface IsSupportedResult {\n  /**\n   * Whether or not the barcode scanner is supported by checking if the device has a camera.\n   *\n   * @since 0.0.1\n   * @example true\n   */\n  supported: boolean;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface IsTorchEnabledResult {\n  /**\n   * Whether or not the torch is enabled.\n   *\n   * @since 0.0.1\n   * @example true\n   */\n  enabled: boolean;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface IsTorchAvailableResult {\n  /**\n   * Whether or not the torch is available.\n   *\n   * @since 0.0.1\n   * @example true\n   */\n  available: boolean;\n}\n\n/**\n * @since 5.4.0\n */\nexport interface SetZoomRatioOptions {\n  /**\n   * The zoom ratio to set.\n   *\n   * @since 5.4.0\n   */\n  zoomRatio: number;\n}\n\n/**\n * @since 5.4.0\n */\nexport interface GetZoomRatioResult {\n  /**\n   * The zoom ratio.\n   *\n   * @since 5.4.0\n   */\n  zoomRatio: number;\n}\n\n/**\n * @since 5.4.0\n */\nexport interface GetMinZoomRatioResult {\n  /**\n   * The minimum zoom ratio.\n   *\n   * @since 5.4.0\n   */\n  zoomRatio: number;\n}\n\n/**\n * @since 5.4.0\n */\nexport interface GetMaxZoomRatioResult {\n  /**\n   * The maximum zoom ratio.\n   *\n   * @since 5.4.0\n   */\n  zoomRatio: number;\n}\n\n/**\n * @since 5.1.0\n */\nexport interface IsGoogleBarcodeScannerModuleAvailableResult {\n  /**\n   * Whether or not the Google Barcode Scanner module is available.\n   *\n   * @since 5.1.0\n   */\n  available: boolean;\n}\n\n/**\n * @since 0.0.1\n */\nexport type CameraPermissionState = PermissionState | 'limited';\n\n/**\n * @since 0.0.1\n */\nexport interface PermissionStatus {\n  /**\n   * @since 0.0.1\n   */\n  camera: CameraPermissionState;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface BarcodeScannedEvent {\n  /**\n   * A detected barcode.\n   *\n   * @since 0.0.1\n   */\n  barcode: Barcode;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface ScanErrorEvent {\n  /**\n   * The error message.\n   *\n   * @since 0.0.1\n   */\n  message: string;\n}\n\n/**\n * @since 5.1.0\n */\nexport interface GoogleBarcodeScannerModuleInstallProgressEvent {\n  /**\n   * The current state of the installation.\n   *\n   * @since 5.1.0\n   */\n  state: GoogleBarcodeScannerModuleInstallState;\n  /**\n   * The progress of the installation in percent between 0 and 100.\n   *\n   * @since 5.1.0\n   */\n  progress?: number;\n}\n\n/**\n * @since 0.0.1\n */\nexport interface Barcode {\n  /**\n   * Raw bytes as it was encoded in the barcode.\n   *\n   * @since 0.0.1\n   * @example [67, 97, 112, 97, 99, 105, 116, 111, 114, 74, 83]\n   */\n  bytes?: number[];\n  /**\n   * The four corner points of the barcode in clockwise\n   * order starting with top-left.\n   *\n   * This property is currently only supported by the `startScan(...)` method.\n   *\n   * @since 0.0.1\n   * @example [[34, 33], [264, 32], [263, 263], [33, 263]]\n   * @experimental This property is experimental and may change in the future.\n   */\n  cornerPoints?: [\n    [number, number],\n    [number, number],\n    [number, number],\n    [number, number],\n  ];\n  /**\n   * The barcode value in a human readable format.\n   *\n   * @since 0.0.1\n   * @example \"CapacitorJS\"\n   */\n  displayValue: string;\n  /**\n   * The barcode format.\n   *\n   * @since 0.0.1\n   * @example \"QR_CODE\"\n   */\n  format: BarcodeFormat;\n  /**\n   * The barcode value in a machine readable format.\n   *\n   * @since 0.0.1\n   * @example \"CapacitorJS\"\n   */\n  rawValue: string;\n  /**\n   * The barcode value type.\n   *\n   * @since 0.0.1\n   * @example \"TEXT\"\n   */\n  valueType: BarcodeValueType;\n}\n\n/**\n * @since 0.0.1\n */\nexport enum BarcodeFormat {\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Aztec = 'AZTEC',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Codabar = 'CODABAR',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Code39 = 'CODE_39',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Code93 = 'CODE_93',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Code128 = 'CODE_128',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  DataMatrix = 'DATA_MATRIX',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Ean8 = 'EAN_8',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Ean13 = 'EAN_13',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Itf = 'ITF',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  Pdf417 = 'PDF_417',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  QrCode = 'QR_CODE',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  UpcA = 'UPC_A',\n  /**\n   * Only available on Android and iOS.\n   *\n   * @since 0.0.1\n   */\n  UpcE = 'UPC_E',\n}\n\n/**\n * @since 0.0.1\n */\nexport enum BarcodeValueType {\n  /**\n   * @since 0.0.1\n   */\n  CalendarEvent = 'CALENDAR_EVENT',\n  /**\n   * @since 0.0.1\n   */\n  ContactInfo = 'CONTACT_INFO',\n  /**\n   * @since 0.0.1\n   */\n  DriversLicense = 'DRIVERS_LICENSE',\n  /**\n   * @since 0.0.1\n   */\n  Email = 'EMAIL',\n  /**\n   * @since 0.0.1\n   */\n  Geo = 'GEO',\n  /**\n   * @since 0.0.1\n   */\n  Isbn = 'ISBN',\n  /**\n   * @since 0.0.1\n   */\n  Phone = 'PHONE',\n  /**\n   * @since 0.0.1\n   */\n  Product = 'PRODUCT',\n  /**\n   * @since 0.0.1\n   */\n  Sms = 'SMS',\n  /**\n   * @since 0.0.1\n   */\n  Text = 'TEXT',\n  /**\n   * @since 0.0.1\n   */\n  Url = 'URL',\n  /**\n   * @since 0.0.1\n   */\n  Wifi = 'WIFI',\n  /**\n   * @since 0.0.1\n   */\n  Unknown = 'UNKNOWN',\n}\n\n/**\n * @since 0.0.1\n */\nexport enum LensFacing {\n  /**\n   * @since 0.0.1\n   */\n  Front = 'FRONT',\n  /**\n   * @since 0.0.1\n   */\n  Back = 'BACK',\n}\n\n/**\n * @since 5.1.0\n */\nexport enum GoogleBarcodeScannerModuleInstallState {\n  /**\n   * @since 5.1.0\n   */\n  UNKNOWN = 0,\n  /**\n   * @since 5.1.0\n   */\n  PENDING = 1,\n  /**\n   * @since 5.1.0\n   */\n  DOWNLOADING = 2,\n  /**\n   * @since 5.1.0\n   */\n  CANCELED = 3,\n  /**\n   * @since 5.1.0\n   */\n  COMPLETED = 4,\n  /**\n   * @since 5.1.0\n   */\n  FAILED = 5,\n  /**\n   * @since 5.1.0\n   */\n  INSTALLING = 6,\n  /**\n   * @since 5.1.0\n   */\n  DOWNLOAD_PAUSED = 7,\n}\n"]}